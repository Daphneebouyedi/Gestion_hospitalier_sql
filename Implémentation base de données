/************************************************************************************************/
--- A. CREATION BASE DE DONNEES
/************************************************************************************************/

CREATE DATABASE IF NOT EXISTS gestion_Hopital_db;
USE gestion_Hopital_db;

/************************************************************************************************/
--- B. CREATION DES TABLES
/*************************************************************************************************/


CREATE DATABASE gestion_Hopital_db;
USE gestion_Hopital_db;

CREATE TABLE Medecin(
   id_Medecin INT AUTO_INCREMENT PRIMARY KEY,
   nom_Medecin VARCHAR(50) NOT NULL,
   prenom_Medecin VARCHAR(50) NOT NULL,
   specialite VARCHAR(50) NOT NULL,
   email_Medecin VARCHAR(50) NOT NULL,
   telephone_Medecin_1 VARCHAR(15) NOT NULL,
   telephone_Medecin_2 VARCHAR(15),
   adresse_Medecin VARCHAR(50),
   genre_Medecin VARCHAR(10),
   CHECK (genre_Medecin IN ('Homme', 'Femme')),
   UNIQUE(email_Medecin),
   UNIQUE(telephone_Medecin_1)
);

CREATE TABLE Comptable(
   id_Comptable INT AUTO_INCREMENT PRIMARY KEY,
   nom_Comptable VARCHAR(50) NOT NULL,
   prenom_Comptable VARCHAR(50) NOT NULL,
   telephone_Comptable_1 VARCHAR(15) NOT NULL,
   telephone_Comptable_2 VARCHAR(15),
   mail_Comptable VARCHAR(50),
   UNIQUE(telephone_Comptable_1),
   UNIQUE(mail_Comptable)
);

CREATE TABLE Salle(
   id_Salle INT AUTO_INCREMENT PRIMARY KEY,
   nom_Salle VARCHAR(50) NOT NULL,
   type_Salle VARCHAR(50) NOT NULL,
   UNIQUE(nom_Salle)
);

CREATE TABLE Receptionniste(
   id_Receptionniste INT AUTO_INCREMENT PRIMARY KEY,
   nom_Receptionniste VARCHAR(50) NOT NULL,
   prenom_Receptionniste VARCHAR(50) NOT NULL,
   email_Receptionniste VARCHAR(50) NOT NULL,
   telephone_Receptionniste_1 VARCHAR(15) NOT NULL,
   telephone_Receptionniste_2 VARCHAR(15),
   UNIQUE(email_Receptionniste),
   UNIQUE(telephone_Receptionniste_1)
);

CREATE TABLE Users(
   id_User INT AUTO_INCREMENT PRIMARY KEY,
   user_Name VARCHAR(50) NOT NULL,
   password VARCHAR(50) NOT NULL,
   role VARCHAR(50) NOT NULL,
   UNIQUE(user_name),
   UNIQUE(password)
);

CREATE TABLE Chambre(
   id_Chambre INT AUTO_INCREMENT PRIMARY KEY,
   capacite INT, 
   CHECK (capacite > 0),
   numero_Lit INT,
   UNIQUE(numero_Lit)
);

CREATE TABLE Patient(
   id_Patient INT AUTO_INCREMENT PRIMARY KEY,
   nom_Patient VARCHAR(50) NOT NULL,
   prenom_Patient VARCHAR(50) NOT NULL,
   genre_Patient VARCHAR(10),
   date_naissance DATE NOT NULL,
   telephone_Patient_1 VARCHAR(15) NOT NULL,
   telephone_Patient_2 VARCHAR(15),
   email_Patient VARCHAR(50),
   adresse_Patient VARCHAR(50),
   id_Chambre INT,
   FOREIGN KEY(id_Chambre) REFERENCES Chambre(id_Chambre)
);

CREATE TABLE Dossier_Medical(
   id_dossier INT AUTO_INCREMENT PRIMARY KEY,
   groupe_Sanguin VARCHAR(5) NOT NULL,
   statut_Rhesus VARCHAR(10) NOT NULL,
   observation VARCHAR(500),
   date_Ouverture DATETIME DEFAULT CURRENT_TIMESTAMP,
   id_Receptionniste INT NOT NULL,
   id_Patient INT NOT NULL,
   UNIQUE(id_Patient),
   FOREIGN KEY(id_Receptionniste) REFERENCES Receptionniste(id_Receptionniste),
   FOREIGN KEY(id_Patient) REFERENCES Patient(id_Patient)
);

CREATE TABLE Feuille(
   id_Feuille INT AUTO_INCREMENT PRIMARY KEY,
   date_Debut DATETIME DEFAULT CURRENT_TIMESTAMP,
   date_Fin DATETIME NULL,
   CHECK (date_Fin >= date_Debut),
   poids DECIMAL(3,2),
   Taille VARCHAR(50),
   Pathologie VARCHAR(300),
   id_dossier INT NOT NULL,
   FOREIGN KEY(id_dossier) REFERENCES Dossier_Medical(id_dossier)
);

CREATE TABLE Traitement(
   id_Traitement INT AUTO_INCREMENT PRIMARY KEY,
   remarque_Traitement VARCHAR(300),
   conclusion VARCHAR(100),
   date_heure DATETIME DEFAULT CURRENT_TIMESTAMP,
   id_Salle INT NOT NULL,
   id_Medecin INT NOT NULL,
   id_Feuille INT NOT NULL,
   FOREIGN KEY(id_Salle) REFERENCES Salle(id_Salle),
   FOREIGN KEY(id_Medecin) REFERENCES Medecin(id_Medecin),
   FOREIGN KEY(id_Feuille) REFERENCES Feuille(id_Feuille)
);

CREATE TABLE Facturation(
   id_Facturation INT AUTO_INCREMENT PRIMARY KEY,
   date_emission DATETIME DEFAULT CURRENT_TIMESTAMP,
   est_Payee BOOLEAN DEFAULT FALSE,
   date_Paiement DATETIME DEFAULT NULL,
   montant DECIMAL (10,2) NOT NULL,
   acteur VARCHAR(50),
   telephone_Acteur VARCHAR(15),
   id_Patient INT NOT NULL,
   id_Comptable INT,
   id_Feuille INT NOT NULL,
   FOREIGN KEY(id_Patient) REFERENCES Patient(id_Patient),
   FOREIGN KEY(id_Comptable) REFERENCES Comptable(id_Comptable),
   FOREIGN KEY(id_Feuille) REFERENCES Feuille(id_Feuille)
);




/************************************************************************************************/
--- C. CREATION DE L'UTILISATEUR RECEPTIONNISTE AVEC DES PRIVILEGES LIMITES
/*************************************************************************************************/

CREATE USER 'receptionniste'@'localhost' IDENTIFIED BY 'AzERt@23t';
GRANT SELECT, INSERT ON gestion_Hopital_db.Patient TO 'receptionniste'@'localhost';
GRANT SELECT ON gestion_Hopital_db.Chambre TO 'receptionniste'@'localhost';

/************************************************************************************************/
--- D. CREATION DE L'UTILISATEUR MEDECIN AVEC DES PRIVILEGES LIMITES
/*************************************************************************************************/

CREATE USER 'medecin'@'localhost' IDENTIFIED BY 'QwtER@1';
GRANT SELECT ON gestion_Hopital_db.Patient TO 'medecin'@'localhost';
GRANT SELECT, INSERT ON gestion_Hopital_db.Traitement TO 'medecin'@'localhost';
GRANT SELECT ON gestion_Hopital_db.Dossier_Medical TO 'medecin'@'localhost';

/************************************************************************************************/
--- E. CREATION DE L'UTILISATEUR COMPTABLE AVEC DES PRIVILEGES LIMITES
/*************************************************************************************************/

CREATE USER 'comptable'@'localhost' IDENTIFIED BY 'BZarP@5T';
GRANT SELECT ON gestion_Hopital_db.Facturation TO 'comptable'@'localhost';
GRANT SELECT ON gestion_Hopital_db.Patient TO 'comptable'@'localhost';
